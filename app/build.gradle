apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

android {
    /*compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.application.domainchallenge"
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode buildVersionCode()
        versionName buildVersionName()

        vectorDrawables.useSupportLibrary = true
        // TODO -- Check this testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }*/


    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        testApplicationId globalConfiguration.getAt("testApplicationId")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'              //Lint gives this warning but SDK 20 would be Android L Beta.
    }

    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
    }
}

dependencies {

    /*compile project(':domain')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:" + project.ext.supportLibVersion
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:' + project.ext.mockitoVersion

    compile 'com.google.dagger:dagger:2.7'

    annotationProcessor 'com.google.dagger:dagger-compiler:2.7'

    compile 'com.annimon:stream:' + project.ext.streamsVersion
    compile 'io.reactivex.rxjava2:rxjava:2.1.1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    compile 'com.google.code.gson:gson:2.8.0'
    compile "com.android.support:design:" + project.ext.supportLibVersion
    compile "com.android.support:recyclerview-v7:" + project.ext.supportLibVersion
    compile "com.android.support:cardview-v7:" + project.ext.supportLibVersion

    compile 'com.facebook.stetho:stetho:1.4.2'

    compile 'com.github.bumptech.glide:glide:3.7.0' */

    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies

    compile project(':domain')
    compile project(':data')


   // compile 'com.google.dagger:dagger:2.9'

   // annotationProcessor 'com.google.dagger:dagger-compiler:2.9'

    compile "com.google.dagger:dagger-android-support:2.11"
    compile "com.google.dagger:dagger:2.11"
    annotationProcessor "com.google.dagger:dagger-compiler:2.11"

    //apt presentationDependencies.daggerCompiler
    //compile presentationDependencies.dagger

    compile presentationDependencies.butterKnife
    annotationProcessor presentationDependencies.butterKnifeComp

    compile presentationDependencies.recyclerView
    compile presentationDependencies.rxJava
    compile presentationDependencies.rxAndroid
    compile presentationDependencies.glide
    compile presentationDependencies.stetho
    implementation presentationDependencies.appCompat
    compile presentationDependencies.constraintLayout
    compile presentationDependencies.design
    compile presentationDependencies.cardView

    //compile 'com.android.support:appcompat-v7:21.2.0'
    //implementation 'com.android.support:design:26.1.0'

    //compile presentationDependencies.designs
    provided presentationDependencies.javaxAnnotation

    androidTestCompile presentationTestDependencies.mockito
    androidTestCompile presentationTestDependencies.dexmaker
    androidTestCompile presentationTestDependencies.dexmakerMockito
    androidTestCompile presentationTestDependencies.espresso
    androidTestCompile presentationTestDependencies.testingSupportLib

    //Development
    //TODO -- Enable and try again -- compile developmentDependencies.leakCanary

}
